import { Component, OnInit } from '@angular/core';
import { PostService } from '../../services/post.service';
import { Post } from '../../model/post';
import { Observable } from 'rxjs';

@Component({
  selector: 'app-posts',
  templateUrl: './posts.component.html',
  styleUrls: ['./posts.component.css']
})
export class PostsComponent implements OnInit {

  posts: Post[] = [];
  sortedPosts: Post[] = [];
  sortCriteria: string = '';

  constructor(private postService: PostService) { }

  ngOnInit(): void {
    this.getPosts();
  }

  getPosts(): void {
    this.postService.getAllPosts()
      .subscribe(posts => {
        this.posts = posts;
        this.sortedPosts = [...this.posts];
      });
  }

  sortByTitle(): void {
    this.sortCriteria = 'title';
    this.sortedPosts.sort((a, b) => a.title.localeCompare(b.title));
  }

  getPostById(postId: number): void {
    this.postService.getPostById(postId)
      .subscribe(post => {
        this.posts = post;
        this.sortedPosts = [...this.posts];
      });
  }

  getPostsByTitle(title: string): void {
    this.postService.getPostsByTitle(title)
      .subscribe(posts => {
        this.posts = posts;
        this.sortedPosts = [...this.posts];
      });
  }

  getPostsSortedByDate(): void {
    this.postService.getPostsSortedByDate()
      .subscribe(posts => {
        this.posts = posts;
        this.sortedPosts = [...this.posts];
      });
  }

  getCompletedPosts(): void {
    this.postService.getCompletedPosts()
      .subscribe(posts => {
        this.posts = posts;
        this.sortedPosts = [...this.posts];
      });
  }

  getIncompletedPosts(): void {
    this.postService.getIncompletedPosts()
      .subscribe(posts => {
        this.posts = posts;
        this.sortedPosts = [...this.posts];
      });
  }

  getPostsByCategory(category: string): void {
    this.postService.getPostsByCategory(category)
      .subscribe(posts => {
        this.posts = posts;
        this.sortedPosts = [...this.posts];
      });
  }
}
