import { axiosInstance } from "./axios-http-client";

const API_URL = 'http://localhost:8090/';

class DonorService {
  async viewDonorById(id) {
    try {
      const response = await axiosInstance.get(API_URL + `donor/${id}`);
      return response.data;
    } catch (error) {
      throw new Error('Failed to fetch donor data');
    }
  }

  async updateDonorNameById(id, newName) {
    try {
      const response = await axiosInstance.patch(API_URL + `donor/${id}/name`, { name: newName });
      return response.data;
    } catch (error) {
      throw new Error('Failed to update donor name');
    }
  }

  async updateDonorEmailById(id, newEmail) {
    try {
      const response = await axiosInstance.patch(API_URL + `donor/${id}/email`, { email: newEmail });
      return response.data;
    } catch (error) {
      throw new Error('Failed to update donor email');
    }
  }

  async updateDonorPasswordById(id, newPassword) {
    try {
      const response = await axiosInstance.patch(API_URL + `donor/${id}/password`, { password: newPassword });
      return response.data;
    } catch (error) {
      throw new Error('Failed to update donor password');
    }
  }

  async deleteDonorById(id) {
    try {
      const response = await axiosInstance.delete(API_URL + `donor/${id}`);
      return response.data;
    } catch (error) {
      throw new Error('Failed to delete donor account');
    }
  }
}

export default new DonorService();
