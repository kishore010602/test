//post.component.html
<div class="post-list">
    <div *ngFor="let post of posts">
      <h2>{{ post.title }}</h2>
      <p>{{ post.description }}</p>
      <p>Category: {{ post.category }}</p>
      <p>Start Date: {{ post.startDate.toLocaleDateString() }}</p>
      <p>End Date: {{ post.endDate.toLocaleDateString() }}</p>
      <p>Amount Requested: {{ post.amountRequested }}</p>
      <p>Amount Collected: {{ post.amountCollected }}</p>
      <button>Donate</button>
    </div>
  </div>
// Assuming you have PostService.spec.ts and Post.ts
//post.component.spec.ts
import { TestBed, ComponentFixture } from '@angular/core/testing';
import { PostsComponent } from './posts.component';
import { PostService } from '../../services/post.service'; // Import PostService
import { Post } from '../../model/post'; // Import Post model

describe('PostsComponent', () => {
  let component: PostsComponent;
  let fixture: ComponentFixture<PostsComponent>;
  let postService: PostService;

  beforeEach(async () => {
    TestBed.configureTestingModule({
      declarations: [ PostsComponent ],
      providers: [ PostService ]
    })
    .compileComponents(); // Compile components asynchronously
  });

  beforeEach(() => {
    fixture = TestBed.createComponent(PostsComponent); // Use TestBed.createComponent
    component = fixture.componentInstance;
    postService = TestBed.inject(PostService);
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });

  
});
//post.component.ts
import { Component, OnInit } from '@angular/core';
import { PostService } from '../../services/post.service'; // Import PostService
import { Post } from '../../model/post'; // Import Post model

@Component({
  selector: 'app-posts',
  templateUrl: './posts.component.html',
  styleUrls: ['./posts.component.css']
})
export class PostsComponent implements OnInit {

  posts: Post[] = [];

  constructor(private postService: PostService) { }

  ngOnInit(): void {
    this.getPosts(); // Fetch posts on initialization
  }

  getPosts(): void {
    this.postService.getAllPosts()
      .subscribe(posts => this.posts = posts);
  }
}
//post.ts
export class Post {
    constructor(
      public id?: number,
      public title?: string,
      public description?: string,
      public category?: string,
      public startDate?: Date,
      public endDate?: Date,
      public amountRequested?: number,
      public amountCollected?: number,
      public status?: string,
      public donationAccountId?: string,
      public fundraiser?: Fundraiser,
      public donations?: Payment[],
      public comments?: Comment[]
    ) {}
  }
  
  export class Fundraiser {
    constructor(
      public id?: number,
      public name?: string,
      public email?: string
    ) {}
  }
  
  export class Payment {
    constructor(
      public id?: number,
      public amount?: number,
      public date?: Date
    ) {}
  }
  
  export class Comment {
    constructor(
      public id?: number,
      public content?: string,
      public author?: string,
      public date?: Date
    ) {}
  }
//post.spec.ts
import { Post } from './post';

describe('Post', () => {
  it('should create an instance', () => {
    expect(new Post()).toBeTruthy();
  });
});
///post.service.spec.ts
import { TestBed } from '@angular/core/testing';
import { HttpClientTestingModule } from '@angular/common/http/testing';

import { PostService } from './post.service';

describe('PostService', () => {
  let service: PostService;

  beforeEach(() => {
    TestBed.configureTestingModule({
      imports: [HttpClientTestingModule],
      providers: [PostService]
    });
    service = TestBed.inject(PostService);
  });

  it('should be created', () => {
    expect(service).toBeTruthy();
  });
});
//post.service.ts
import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';
import { Post } from '../model/post';

@Injectable({
  providedIn: 'root'
})
export class PostService {

  constructor(private http: HttpClient) { }

  getAllPosts(): Observable<Post[]> {
    return this.http.get<Post[]>('http://localhost:8090/AllPosts'); // Adjust URL as needed
  }
}

