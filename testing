import { Component, OnInit } from '@angular/core';
import { PostService } from '../../services/post.service';
import { Post } from '../../model/post';
import { catchError } from 'rxjs/operators';
import { of } from 'rxjs';

@Component({
  selector: 'app-posts',
  templateUrl: './posts.component.html',
  styleUrls: ['./posts.component.css']
})
export class PostsComponent implements OnInit {
  posts: Post[] = [];
  postId: number;
  category: string;
  title: string;

  constructor(private postService: PostService) { }

  ngOnInit(): void {
    this.getPosts();
  }

  getPosts(): void {
    this.postService.getAllPosts()
      .subscribe(posts => {
        this.posts = posts;
      });
  }

  getPostById(): void {
    this.posts = []; // Clear the posts array
    this.postService.getPostById(this.postId)
      .subscribe(post => {
        this.posts.push(post); // Assuming getPostById returns a single post
      });
  }

  getPostsSortedByDate(): void {
    this.postService.getPostsSortedByDate()
      .subscribe(posts => {
        this.posts = posts;
      });
  }

  getCompletedPosts(): void {
    this.postService.getCompletedPosts()
      .subscribe(posts => {
        this.posts = posts;
      });
  }

  getIncompletedPosts(): void {
    this.postService.getIncompletedPosts()
      .subscribe(posts => {
        this.posts = posts;
      });
  }

  getPostsByCategory(): void {
    this.postService.getPostsByCategory(this.category)
      .subscribe(posts => {
        this.posts = posts;
      });
  }

  getPostsByTitle(): void {
    this.postService.getPostsByTitle(this.title)
      .subscribe(posts => {
        this.posts = posts;
      });
  }
}

<div>
  <!-- Input field and button to get post by ID -->
  <input type="number" [(ngModel)]="postId" placeholder="Enter Post ID">
  <button (click)="getPostById()">Get Post by ID</button>

  <!-- Input field and button to get posts by category -->
  <input type="text" [(ngModel)]="category" placeholder="Enter Category">
  <button (click)="getPostsByCategory()">Get Posts by Category</button>

  <!-- Input field and button to get posts by title -->
  <input type="text" [(ngModel)]="title" placeholder="Enter Title">
  <button (click)="getPostsByTitle()">Get Posts by Title</button>

  <!-- Buttons for other sorting methods -->
  <button (click)="getAllPosts()">Get All Posts</button>
  <button (click)="getPostsSortedByDate()">Get Posts Sorted by Date</button>
  <button (click)="getCompletedPosts()">Get Completed Posts</button>
  <button (click)="getIncompletedPosts()">Get Incompleted Posts</button>
</div>

<div>
  <!-- Display the list of posts -->
  <h3>Available Posts:</h3>
  <h6 *ngIf="posts.length === 0">No Posts found!</h6>
  
  <div class="post-grid" *ngIf="posts.length > 0">
    <div class="post-box" *ngFor="let post of posts">
      <h4>ID: {{ post.id }}</h4>
      <p><strong>Title:</strong> {{ post.title }}</p>
      <p><strong>Category:</strong> {{ post.category }}</p>
      <p><strong>Start Date:</strong> {{ post.startDate }}</p>
      <p><strong>End Date:</strong> {{ post.endDate }}</p>
      <p><strong>Amount Requested:</strong> {{ post.amountRequested }}</p>
      <p><strong>Amount Collected:</strong> {{ post.amountCollected }}</p>
      <p><strong>Status:</strong> {{ post.status }}</p>
    </div>
  </div>
</div>
